console.log("‚úÖ see-all-tasks.js –ø–æ–¥–∫–ª—é—á–µ–Ω");

BX.ready(function () {
  const allowedUserIds = [1]; // ‚Üê —Ç–≤–æ–π ID

  const userId = parseInt(BX.message('USER_ID'));
  console.log('Ì†ΩÌ±§ USER_ID –∏–∑ BX.message ‚Üí', userId);

  if (!allowedUserIds.includes(userId)) {
    console.log(`‚õî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –Ω–µ –≤ —Å–ø–∏—Å–∫–µ`);
    return;
  }

  console.log(`Ì†ΩÌ±Ä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} ‚Äî —Ñ–∏–ª—å—Ç—Ä MEMBER –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á—ë–Ω`);

  const originalCall = BX.rest.callMethod;

  BX.rest.callMethod = function(method, params = {}, callback, sendOptions) {
    if (method === 'tasks.task.list' && params.filter) {
      console.log(`Ì†ΩÌª† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} ‚Üí —Ñ–∏–ª—å—Ç—Ä MEMBER –æ—Ç–∫–ª—é—á–µ–Ω`);
      delete params.filter.MEMBER;
    }
    return originalCall.apply(this, [method, params, callback, sendOptions]);
  };
});

